package vdc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/victorock/gocoprhd/models"
)

// ShowTaskReader is a Reader for the ShowTask structure.
type ShowTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ShowTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewShowTaskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewShowTaskOK creates a ShowTaskOK with default headers values
func NewShowTaskOK() *ShowTaskOK {
	return &ShowTaskOK{}
}

/*ShowTaskOK handles this case with default header values.

Task Object
*/
type ShowTaskOK struct {
	Payload *models.Task
}

func (o *ShowTaskOK) Error() string {
	return fmt.Sprintf("[GET /vdc/tasks/{id}.json][%d] showTaskOK  %+v", 200, o.Payload)
}

func (o *ShowTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowTaskDefault creates a ShowTaskDefault with default headers values
func NewShowTaskDefault(code int) *ShowTaskDefault {
	return &ShowTaskDefault{
		_statusCode: code,
	}
}

/*ShowTaskDefault handles this case with default header values.

Error Message
*/
type ShowTaskDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the show task default response
func (o *ShowTaskDefault) Code() int {
	return o._statusCode
}

func (o *ShowTaskDefault) Error() string {
	return fmt.Sprintf("[GET /vdc/tasks/{id}.json][%d] ShowTask default  %+v", o._statusCode, o.Payload)
}

func (o *ShowTaskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
