package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/victorock/gocoprhd/models"
)

// ExpandVolumeReader is a Reader for the ExpandVolume structure.
type ExpandVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ExpandVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExpandVolumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewExpandVolumeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewExpandVolumeOK creates a ExpandVolumeOK with default headers values
func NewExpandVolumeOK() *ExpandVolumeOK {
	return &ExpandVolumeOK{}
}

/*ExpandVolumeOK handles this case with default header values.

Task Object
*/
type ExpandVolumeOK struct {
	Payload *models.Task
}

func (o *ExpandVolumeOK) Error() string {
	return fmt.Sprintf("[POST /block/volumes/{id}/expand.json][%d] expandVolumeOK  %+v", 200, o.Payload)
}

func (o *ExpandVolumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExpandVolumeDefault creates a ExpandVolumeDefault with default headers values
func NewExpandVolumeDefault(code int) *ExpandVolumeDefault {
	return &ExpandVolumeDefault{
		_statusCode: code,
	}
}

/*ExpandVolumeDefault handles this case with default header values.

Error Message
*/
type ExpandVolumeDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the expand volume default response
func (o *ExpandVolumeDefault) Code() int {
	return o._statusCode
}

func (o *ExpandVolumeDefault) Error() string {
	return fmt.Sprintf("[POST /block/volumes/{id}/expand.json][%d] ExpandVolume default  %+v", o._statusCode, o.Payload)
}

func (o *ExpandVolumeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
