package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/victorock/gocoprhd/models"
)

// ListVolumeExportsReader is a Reader for the ListVolumeExports structure.
type ListVolumeExportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ListVolumeExportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVolumeExportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListVolumeExportsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewListVolumeExportsOK creates a ListVolumeExportsOK with default headers values
func NewListVolumeExportsOK() *ListVolumeExportsOK {
	return &ListVolumeExportsOK{}
}

/*ListVolumeExportsOK handles this case with default header values.

Volume Exports
*/
type ListVolumeExportsOK struct {
	Payload *models.VolumeExports
}

func (o *ListVolumeExportsOK) Error() string {
	return fmt.Sprintf("[GET /block/volumes/{id}/exports.json][%d] listVolumeExportsOK  %+v", 200, o.Payload)
}

func (o *ListVolumeExportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VolumeExports)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeExportsDefault creates a ListVolumeExportsDefault with default headers values
func NewListVolumeExportsDefault(code int) *ListVolumeExportsDefault {
	return &ListVolumeExportsDefault{
		_statusCode: code,
	}
}

/*ListVolumeExportsDefault handles this case with default header values.

Error Message
*/
type ListVolumeExportsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the list volume exports default response
func (o *ListVolumeExportsDefault) Code() int {
	return o._statusCode
}

func (o *ListVolumeExportsDefault) Error() string {
	return fmt.Sprintf("[GET /block/volumes/{id}/exports.json][%d] ListVolumeExports default  %+v", o._statusCode, o.Payload)
}

func (o *ListVolumeExportsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
